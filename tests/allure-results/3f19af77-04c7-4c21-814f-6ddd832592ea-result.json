{"name": "Filling registration form", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55bce382a6c3 <unknown>\n#1 0x55bce35001e7 <unknown>\n#2 0x55bce3533526 <unknown>\n#3 0x55bce352f69c <unknown>\n#4 0x55bce357223a <unknown>\n#5 0x55bce3568e93 <unknown>\n#6 0x55bce353b934 <unknown>\n#7 0x55bce353c71e <unknown>\n#8 0x55bce37efcc8 <unknown>\n#9 0x55bce37f3c00 <unknown>\n#10 0x55bce37fe1ac <unknown>\n#11 0x55bce37f4818 <unknown>\n#12 0x55bce37c128f <unknown>\n#13 0x55bce3818e98 <unknown>\n#14 0x55bce3819069 <unknown>\n#15 0x55bce3829853 <unknown>\n#16 0x7f6682494ac3 <unknown>", "trace": "@allure.title('Filling registration form')\n    @allure.tag('Frontend')\n    def test_filling_form():\n        with allure.step('Opening browser page'):\n>           reg_page.open_page()\n\ntests/test_demoqa.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ndemoqa_tests/pages/registration_page.py:10: in open_page\n    return browser.open('/automation-practice-form')\nenv/lib/python3.10/site-packages/selene/core/entity.py:1155: in open\n    self.config._executor.get_url(relative_or_absolute_url)\nenv/lib/python3.10/site-packages/selene/core/configuration.py:301: in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\nenv/lib/python3.10/site-packages/selene/core/configuration.py:216: in get\n    driver = config.driver\nenv/lib/python3.10/site-packages/selene/core/configuration.py:343: in __get__\n    driver = config.build_driver_strategy(config)\nenv/lib/python3.10/site-packages/selene/core/configuration.py:171: in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\nenv/lib/python3.10/site-packages/selene/core/configuration.py:93: in install_and_build_chrome\n    return Chrome(\nenv/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\nenv/lib/python3.10/site-packages/selenium/webdriver/chromium/webdriver.py:56: in __init__\n    super().__init__(\nenv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:205: in __init__\n    self.start_session(capabilities)\nenv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:289: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\nenv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fe0ad66f040>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: Chrome failed to sta...\\\\n#14 0x55bce3819069 \\\\u003Cunknown>\\\\n#15 0x55bce3829853 \\\\u003Cunknown>\\\\n#16 0x7f6682494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\nE         (session not created: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x55bce382a6c3 <unknown>\nE       #1 0x55bce35001e7 <unknown>\nE       #2 0x55bce3533526 <unknown>\nE       #3 0x55bce352f69c <unknown>\nE       #4 0x55bce357223a <unknown>\nE       #5 0x55bce3568e93 <unknown>\nE       #6 0x55bce353b934 <unknown>\nE       #7 0x55bce353c71e <unknown>\nE       #8 0x55bce37efcc8 <unknown>\nE       #9 0x55bce37f3c00 <unknown>\nE       #10 0x55bce37fe1ac <unknown>\nE       #11 0x55bce37f4818 <unknown>\nE       #12 0x55bce37c128f <unknown>\nE       #13 0x55bce3818e98 <unknown>\nE       #14 0x55bce3819069 <unknown>\nE       #15 0x55bce3829853 <unknown>\nE       #16 0x7f6682494ac3 <unknown>\n\nenv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException"}, "steps": [{"name": "Opening browser page", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55bce382a6c3 <unknown>\n#1 0x55bce35001e7 <unknown>\n#2 0x55bce3533526 <unknown>\n#3 0x55bce352f69c <unknown>\n#4 0x55bce357223a <unknown>\n#5 0x55bce3568e93 <unknown>\n#6 0x55bce353b934 <unknown>\n#7 0x55bce353c71e <unknown>\n#8 0x55bce37efcc8 <unknown>\n#9 0x55bce37f3c00 <unknown>\n#10 0x55bce37fe1ac <unknown>\n#11 0x55bce37f4818 <unknown>\n#12 0x55bce37c128f <unknown>\n#13 0x55bce3818e98 <unknown>\n#14 0x55bce3819069 <unknown>\n#15 0x55bce3829853 <unknown>\n#16 0x7f6682494ac3 <unknown>\n\n", "trace": "  File \"/home/roman/PycharmProjects/selene_in_action/tests/test_demoqa.py\", line 9, in test_filling_form\n    reg_page.open_page()\n  File \"/home/roman/PycharmProjects/selene_in_action/demoqa_tests/pages/registration_page.py\", line 10, in open_page\n    return browser.open('/automation-practice-form')\n  File \"/home/roman/PycharmProjects/selene_in_action/env/lib/python3.10/site-packages/selene/core/entity.py\", line 1155, in open\n    self.config._executor.get_url(relative_or_absolute_url)\n  File \"/home/roman/PycharmProjects/selene_in_action/env/lib/python3.10/site-packages/selene/core/configuration.py\", line 301, in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n  File \"/home/roman/PycharmProjects/selene_in_action/env/lib/python3.10/site-packages/selene/core/configuration.py\", line 216, in get\n    driver = config.driver\n  File \"/home/roman/PycharmProjects/selene_in_action/env/lib/python3.10/site-packages/selene/core/configuration.py\", line 343, in __get__\n    driver = config.build_driver_strategy(config)\n  File \"/home/roman/PycharmProjects/selene_in_action/env/lib/python3.10/site-packages/selene/core/configuration.py\", line 171, in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n  File \"/home/roman/PycharmProjects/selene_in_action/env/lib/python3.10/site-packages/selene/core/configuration.py\", line 93, in install_and_build_chrome\n    return Chrome(\n  File \"/home/roman/PycharmProjects/selene_in_action/env/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/home/roman/PycharmProjects/selene_in_action/env/lib/python3.10/site-packages/selenium/webdriver/chromium/webdriver.py\", line 56, in __init__\n    super().__init__(\n  File \"/home/roman/PycharmProjects/selene_in_action/env/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 205, in __init__\n    self.start_session(capabilities)\n  File \"/home/roman/PycharmProjects/selene_in_action/env/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 289, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n  File \"/home/roman/PycharmProjects/selene_in_action/env/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/home/roman/PycharmProjects/selene_in_action/env/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1698318670928, "stop": 1698318673182}], "start": 1698318670927, "stop": 1698318673183, "uuid": "3829b24b-17bd-42a8-b0a7-3e6e0e91409b", "historyId": "83819841802fc82b7228ecbd33d6507d", "testCaseId": "62a99817365350cfa583b972935777b8", "fullName": "tests.test_demoqa#test_filling_form", "labels": [{"name": "tag", "value": "Frontend"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_demoqa"}, {"name": "host", "value": "roman-H410M-B"}, {"name": "thread", "value": "3377242-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_demoqa"}]}